"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/tetris";
exports.ids = ["pages/tetris"];
exports.modules = {

/***/ "./pages/tetris.js":
/*!*************************!*\
  !*** ./pages/tetris.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n// pages/index.js\n\nconst ROWS = 20;\nconst COLS = 10;\nconst BLOCK_SIZE = 30;\nconst MOVE_DOWN_INTERVAL = 1000; // Adjust the interval based on your preference\nconst Tetris = ()=>{\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    let context;\n    // Tetromino shapes\n    const tetrominoes = [\n        [\n            [\n                1,\n                1,\n                1,\n                1\n            ]\n        ],\n        [\n            [\n                1,\n                1,\n                1,\n                0\n            ],\n            [\n                1\n            ]\n        ],\n        [\n            [\n                1,\n                1,\n                1,\n                0\n            ],\n            [\n                0,\n                0,\n                1\n            ]\n        ],\n        [\n            [\n                1,\n                1,\n                1,\n                0\n            ],\n            [\n                0,\n                1\n            ]\n        ],\n        [\n            [\n                1,\n                1,\n                1,\n                1\n            ]\n        ],\n        [\n            [\n                1,\n                1,\n                0,\n                0\n            ],\n            [\n                1,\n                1\n            ]\n        ],\n        [\n            [\n                0,\n                1,\n                1,\n                0\n            ],\n            [\n                1,\n                1\n            ]\n        ], \n    ];\n    const { 0: gameIsResetting , 1: setGameIsResetting  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Game state\n    const board = Array.from({\n        length: ROWS\n    }, ()=>Array(COLS).fill(0)\n    );\n    let currentTetromino;\n    let currentPosition;\n    let lastTimestamp = 0;\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        context = canvasRef.current.getContext(\"2d\");\n        spawnTetromino();\n        gameLoop();\n    }, []);\n    const draw = ()=>{\n        context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n        drawBoard();\n        drawTetromino();\n    };\n    const drawBoard = ()=>{\n        for(let row = 0; row < ROWS; row++){\n            for(let col = 0; col < COLS; col++){\n                if (board[row][col]) {\n                    drawBlock(col, row);\n                }\n            }\n        }\n    };\n    const drawTetromino = ()=>{\n        if (!currentTetromino) return;\n        currentTetromino.forEach((row, i)=>{\n            row.forEach((cell, j)=>{\n                if (cell) {\n                    drawBlock(currentPosition.x + j, currentPosition.y + i);\n                }\n            });\n        });\n    };\n    const drawBlock = (x, y)=>{\n        context.fillStyle = \"blue\";\n        context.fillRect(x * BLOCK_SIZE, y * BLOCK_SIZE, BLOCK_SIZE, BLOCK_SIZE);\n        context.strokeStyle = \"white\";\n        context.strokeRect(x * BLOCK_SIZE, y * BLOCK_SIZE, BLOCK_SIZE, BLOCK_SIZE);\n    };\n    const rotateTetromino = ()=>{\n        const rotatedTetromino = currentTetromino[0].map((_, i)=>currentTetromino.map((row)=>row[i]\n            )\n        );\n        // Reverse the order of rows to get the proper rotation\n        rotatedTetromino.forEach((row)=>row.reverse()\n        );\n        if (!isCollision(rotatedTetromino, currentPosition)) {\n            currentTetromino = rotatedTetromino;\n        }\n    };\n    const moveDown = (timestamp)=>{\n        const elapsed = timestamp - lastTimestamp;\n        if (elapsed > MOVE_DOWN_INTERVAL) {\n            lastTimestamp = timestamp;\n            currentPosition.y++;\n            if (isCollision(currentTetromino, currentPosition)) {\n                currentPosition.y--;\n                mergeTetromino();\n                clearRows();\n                spawnTetromino();\n                if (isCollision(currentTetromino, currentPosition)) {\n                    resetGame();\n                }\n            }\n            draw();\n        }\n        requestAnimationFrame((nextTimestamp)=>moveDown(nextTimestamp)\n        );\n    };\n    const moveLeft = ()=>{\n        currentPosition.x--;\n        if (isCollision(currentTetromino, currentPosition)) {\n            currentPosition.x++;\n        }\n        draw();\n    };\n    const moveRight = ()=>{\n        currentPosition.x++;\n        if (isCollision(currentTetromino, currentPosition)) {\n            currentPosition.x--;\n        }\n        draw();\n    };\n    const isCollision = (tetromino, position)=>{\n        for(let i = 0; i < tetromino.length; i++){\n            for(let j = 0; j < tetromino[i].length; j++){\n                if (tetromino[i][j] && (board[position.y + i] && board[position.y + i][position.x + j]) !== 0) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    const mergeTetromino = ()=>{\n        currentTetromino.forEach((row, i)=>{\n            row.forEach((cell, j)=>{\n                if (cell) {\n                    board[currentPosition.y + i][currentPosition.x + j] = 1;\n                }\n            });\n        });\n    };\n    const clearRows = ()=>{\n        for(let row = ROWS - 1; row >= 0; row--){\n            if (board[row].every((cell)=>cell\n            )) {\n                board.splice(row, 1);\n                board.unshift(Array(COLS).fill(0));\n            }\n        }\n    };\n    const spawnTetromino = ()=>{\n        const randomIndex = Math.floor(Math.random() * tetrominoes.length);\n        currentTetromino = tetrominoes[randomIndex];\n        currentPosition = {\n            x: Math.floor(COLS / 2) - 1,\n            y: 0\n        };\n    };\n    const resetGame = ()=>{\n        setGameIsResetting(true);\n        board.forEach((row)=>row.fill(0)\n        );\n        setGameIsResetting(false);\n        spawnTetromino();\n    };\n    const gameLoop = (timestamp)=>{\n        if (!gameIsResetting) {\n            moveDown(timestamp);\n            requestAnimationFrame(gameLoop);\n        }\n    };\n    const handleKeyDown = (event)=>{\n        switch(event.code){\n            case \"ArrowUp\":\n                rotateTetromino();\n                break;\n            case \"ArrowDown\":\n                moveDown(performance.now());\n                break;\n            case \"ArrowLeft\":\n                moveLeft();\n                break;\n            case \"ArrowRight\":\n                moveRight();\n                break;\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Add event listener for keydown\n        window.addEventListener(\"keydown\", handleKeyDown);\n        // Cleanup event listener on component unmount\n        return ()=>{\n            window.removeEventListener(\"keydown\", handleKeyDown);\n        };\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                children: \"Welcome to Tetris\"\n            }, void 0, false, {\n                fileName: \"/Users/thierryjones/Documents/portfolio/pages/tetris.js\",\n                lineNumber: 206,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                ref: canvasRef,\n                width: COLS * BLOCK_SIZE,\n                height: ROWS * BLOCK_SIZE,\n                tabIndex: \"0\",\n                style: {\n                    border: \"1px solid black\"\n                }\n            }, void 0, false, {\n                fileName: \"/Users/thierryjones/Documents/portfolio/pages/tetris.js\",\n                lineNumber: 207,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/thierryjones/Documents/portfolio/pages/tetris.js\",\n        lineNumber: 205,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Tetris);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/tetris.js\n");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

module.exports = require("react");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("react/jsx-dev-runtime");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/tetris.js"));
module.exports = __webpack_exports__;

})();